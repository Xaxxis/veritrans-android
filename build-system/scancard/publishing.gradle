apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply from: "$rootDir/build-system/publish-variable.gradle"

version = versionSdk
group = groupIdSdk

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}

publishing {
    publications {
        sandbox(MavenPublication) {
            artifact(sourceJar)
            groupId group
            artifactId 'scancard'
            version this.version + "-SANDBOX"
            artifact("$buildDir/outputs/aar/${artifactId}-development-release.aar")

            pom {
                name = "Midtrans-SCANCARD"
                description = 'Android SDK for integrating with midtrans.com'
                url = 'https://github.com/veritrans/veritrans-android'
                licenses {
                    license {
                        name = 'Midtrans License'
                        url = 'https://github.com/veritrans/veritrans-android/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = developerId
                        name = developerName
                        email = developerEmail
                    }
                }
                scm {
                    connection = 'scm:git:github.com:veritrans/veritrans-android.git'
                    developerConnection = 'scm:git:ssh://github.com/veritrans/veritrans-android.git'
                    url = 'https://github.com/veritrans/veritrans-android/tree/master'
                }
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        if (it.group == 'com.midtrans') {
                            dependencyNode.appendNode('version', it.version + '-SANDBOX')
                        } else {
                            dependencyNode.appendNode('version', it.version)
                        }
                    }

                    configurations.developmentImplementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }

        uat(MavenPublication) {
            artifact(sourceJar)
            groupId group
            artifactId 'scancard'
            version this.version + "-UAT"
            artifact("$buildDir/outputs/aar/${artifactId}-uat-release.aar")

            pom {
                name = "Midtrans-SCANCARD"
                description = 'Android SDK for integrating with midtrans.com'
                url = 'https://github.com/veritrans/veritrans-android'
                licenses {
                    license {
                        name = 'Midtrans License'
                        url = 'https://github.com/veritrans/veritrans-android/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = developerId
                        name = developerName
                        email = developerEmail
                    }
                }
                scm {
                    connection = 'scm:git:github.com:veritrans/veritrans-android.git'
                    developerConnection = 'scm:git:ssh://github.com/veritrans/veritrans-android.git'
                    url = 'https://github.com/veritrans/veritrans-android/tree/master'
                }
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        if (it.group == 'com.midtrans') {
                            dependencyNode.appendNode('version', it.version + '-UAT')
                        } else {
                            dependencyNode.appendNode('version', it.version)
                        }
                    }

                    configurations.uatImplementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }

        production(MavenPublication) {
            artifact(sourceJar)
            groupId group
            artifactId 'scancard'
            version this.version
            artifact("$buildDir/outputs/aar/${artifactId}-production-release.aar")

            pom {
                name = "Midtrans-SCANCARD"
                description = 'Android SDK for integrating with midtrans.com'
                url = 'https://github.com/veritrans/veritrans-android'
                licenses {
                    license {
                        name = 'Midtrans License'
                        url = 'https://github.com/veritrans/veritrans-android/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = developerId
                        name = developerName
                        email = developerEmail
                    }
                }
                scm {
                    connection = 'scm:git:github.com:veritrans/veritrans-android.git'
                    developerConnection = 'scm:git:ssh://github.com/veritrans/veritrans-android.git'
                    url = 'https://github.com/veritrans/veritrans-android/tree/master'
                }
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }

                    configurations.productionImplementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications
}
